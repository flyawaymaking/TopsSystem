package com.flyaway.tops.gui;

import com.flyaway.tops.config.ConfigManager;
import com.flyaway.tops.manager.TopManager;
import com.flyaway.tops.model.TopCategory;
import com.flyaway.tops.model.TopPlayer;
import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.inventory.meta.PotionMeta;
import org.bukkit.potion.PotionEffect;
import org.bukkit.potion.PotionEffectType;
import org.bukkit.inventory.meta.SkullMeta;
import com.destroystokyo.paper.profile.PlayerProfile;
import com.destroystokyo.paper.profile.ProfileProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

public class TopGUI {
    private final Player player;
    private final TopManager topManager;
    private final ConfigManager configManager;
    private Inventory inventory;

    public TopGUI(Player player, TopManager topManager, ConfigManager configManager) {
        this.player = player;
        this.topManager = topManager;
        this.configManager = configManager;

        // –°–æ–∑–¥–∞–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å —Å –Ω–∞—à–∏–º —Ö–æ–ª–¥–µ—Ä–æ–º
        TopInventoryHolder holder = new TopInventoryHolder();
        this.inventory = Bukkit.createInventory(
            holder,
            configManager.getGuiSize(),
            configManager.getGuiTitle()
        );
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –≤ —Ö–æ–ª–¥–µ—Ä
        holder.setInventory(inventory);
    }

    public void open() {
        setupGUI();
        player.openInventory(inventory);
    }

    public Inventory getInventory() {
        return inventory;
    }

    private void setupGUI() {
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        for (TopCategory category : topManager.getAllCategories()) {
            ConfigManager.CategoryConfig categoryConfig = configManager.getCategory(category.getId());
            if (categoryConfig != null) {
                ItemStack categoryItem = createCategoryItem(category, categoryConfig);
                inventory.setItem(categoryConfig.getSlot(), categoryItem);
            }
        }

        // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø—É—Å—Ç—ã–µ —Å–ª–æ—Ç—ã
        ItemStack filler = createFiller();
        for (int i = 0; i < inventory.getSize(); i++) {
            if (inventory.getItem(i) == null) {
                inventory.setItem(i, filler);
            }
        }
    }

    private ItemStack createCategoryItem(TopCategory category, ConfigManager.CategoryConfig config) {
        List<String> lore = buildLore(category, config);

        // –ï—Å–ª–∏ —ç—Ç–æ –≥–æ–ª–æ–≤–∞ –∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç—É—Ä–∞ - —Å–æ–∑–¥–∞–µ–º –≥–æ–ª–æ–≤—É —Å —Ç–µ–∫—Å—Ç—É—Ä–æ–π
        if (config.isHead() && config.getTexture() != null && !config.getTexture().isEmpty()) {
            return createHeadWithTexture(config.getTexture(), config.getDisplayName(), lore);
        }

        // –ï—Å–ª–∏ —ç—Ç–æ –∑–µ–ª—å–µ - —Å–æ–∑–¥–∞–µ–º –∑–µ–ª—å–µ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ç–∏–ø–æ–º
        if (isPotion(config.getItem())) {
            return createPotionItem(config.getItem(), config.getDisplayName(), lore, config.getPotionType());
        }

        // –û–±—ã—á–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç
        return createItem(config.getItem(), config.getDisplayName(), lore);
    }

    private List<String> buildLore(TopCategory category, ConfigManager.CategoryConfig config) {
        List<String> lore = new ArrayList<>();
        List<TopPlayer> topPlayers = category.getTopPlayers();

        for (String line : config.getLoreTemplate()) {
            if (line.contains("%top_players%")) {
                // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–≥—Ä–∞–¥–∞—Ö –ø–µ—Ä–µ–¥ —Å–ø–∏—Å–∫–æ–º –∏–≥—Ä–æ–∫–æ–≤
                String currencySymbol = configManager.getCurrencySymbol();
                lore.addAll(configManager.getCategoryPreLore());

                // –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤
                for (int i = 0; i < Math.min(10, topPlayers.size()); i++) {
                    TopPlayer topPlayer = topPlayers.get(i);
                    int position = i + 1;
                    String positionColor = getPositionColor(position);
                    String positionIcon = getPositionIcon(position);

                    String playerLine = positionColor + positionIcon + " " + topPlayer.getPlayerName() +
                            " ¬ß7- ¬ße" + topPlayer.getDisplayValue();

                    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–≥—Ä–∞–¥–∞—Ö –¥–ª—è –ø–æ–∑–∏—Ü–∏–π –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
                    if (configManager.getRewardPositions().contains(position)) {
                        int reward = configManager.getRewardForPosition(position);
                        if (reward > 0) {
                            playerLine += " ¬ß7[¬ß6" + reward + currencySymbol + "¬ß7]";
                        }
                    }

                    lore.add(playerLine);
                }
            } else if (line.contains("%player_level%")) {
                // –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞
                TopPlayer playerData = topManager.getPlayerData(player, category.getId());
                if (playerData != null) {
                    lore.add(line.replace("%player_level%", playerData.getDisplayValue()));
                } else {
                    lore.add(line.replace("%player_level%", "¬ßc–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"));
                }
            } else {
                lore.add(line);
            }
        }

        return lore;
    }

    private ItemStack createFiller() {
        return createItem(configManager.getFillerItem(), " ", null);
    }

    private ItemStack createItem(Material material, String name, List<String> lore) {
        ItemStack item = new ItemStack(material);
        ItemMeta meta = item.getItemMeta();
        if (meta != null) {
            meta.setDisplayName(name);
            if (lore != null) {
                meta.setLore(lore);
            }
            meta.addItemFlags(org.bukkit.inventory.ItemFlag.HIDE_ATTRIBUTES);
            item.setItemMeta(meta);
        }
        return item;
    }

    private ItemStack createHeadWithTexture(String texture, String displayName, List<String> lore) {
        ItemStack head = new ItemStack(Material.PLAYER_HEAD);
        SkullMeta meta = (SkullMeta) head.getItemMeta();

        if (meta != null && texture != null && !texture.isEmpty()) {
            // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Å —Ç–µ–∫—Å—Ç—É—Ä–æ–π (–∏—Å–ø–æ–ª—å–∑—É–µ–º Paper API)
            PlayerProfile profile = Bukkit.createProfile(UUID.randomUUID(), "CustomHead");
            ProfileProperty property = new ProfileProperty("textures", texture);
            profile.setProperty(property);
            meta.setPlayerProfile(profile);

            meta.setDisplayName(displayName);
            if (lore != null) {
                meta.setLore(lore);
            }
            head.setItemMeta(meta);
        }

        return head;
    }

    private ItemStack createPotionItem(Material material, String name, List<String> lore, PotionEffectType potionType) {
        ItemStack potion = new ItemStack(material);
        PotionMeta meta = (PotionMeta) potion.getItemMeta();

        if (meta != null) {
            meta.setDisplayName(name);
            if (lore != null) {
                meta.setLore(lore);
            }

            // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –∑–µ–ª—å—è
            if (potionType != null) {
                // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –∑–µ–ª—å—è (1 —Å–µ–∫—É–Ω–¥–∞, —É—Ä–æ–≤–µ–Ω—å 1)
                PotionEffect effect = new PotionEffect(potionType, 20, 0); // 20 —Ç–∏–∫–æ–≤ = 1 —Å–µ–∫—É–Ω–¥–∞
                meta.addCustomEffect(effect, true);
            }

            // –°–∫—Ä—ã–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –∑–µ–ª—å—è
            meta.addItemFlags(org.bukkit.inventory.ItemFlag.HIDE_ADDITIONAL_TOOLTIP);

            potion.setItemMeta(meta);
        }

        return potion;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –º–∞—Ç–µ—Ä–∏–∞–ª –∑–µ–ª—å–µ–º
    private boolean isPotion(Material material) {
        return material == Material.POTION ||
               material == Material.SPLASH_POTION ||
               material == Material.LINGERING_POTION ||
               material == Material.TIPPED_ARROW;
    }

    private String getPositionColor(int position) {
        return switch (position) {
            case 1 -> "¬ß6";
            case 2 -> "¬ß7";
            case 3 -> "¬ßc";
            default -> "¬ßf";
        };
    }

    private String getPositionIcon(int position) {
        return switch (position) {
            case 1 -> "ü•á";
            case 2 -> "ü•à";
            case 3 -> "ü•â";
            default -> position + ".";
        };
    }
}
